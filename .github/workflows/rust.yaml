name: async-time-mock
on: push
env:
    CARGO_TERM_COLOR: always
jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  default: true
            - uses: Swatinem/rust-cache@v2
            - name: Check all features
              run: cargo check --tests --all-features
            - name: Check with default features
              run: cargo check --tests
            - name: Check without default features
              run: cargo check --tests --no-default-features
            - name: Check with only stream feature
              run: cargo check --tests --no-default-features --features stream
            - name: Check with only mock feature
              run: cargo check --tests --no-default-features --features mock
            - name: Check with only interval feature
              run: cargo check --tests --no-default-features --features interval
            - name: Check with mock and interval feature
              run: cargo check --tests --no-default-features --features mock,interval
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  default: true
                  components: clippy, rustfmt
            - uses: Swatinem/rust-cache@v2
            - name: Check formatting
              run: cargo fmt --all -- --check
            - uses: actions-rs/clippy-check@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  args: --all-features --tests
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest, windows-latest, macos-latest ]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  default: true
                  components: clippy, rustfmt
            - uses: Swatinem/rust-cache@v2
            - name: Build
              run: cargo build --all-features
            - name: Run tests
              run: cargo test --all-features
